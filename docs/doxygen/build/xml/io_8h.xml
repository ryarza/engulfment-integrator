<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="io_8h" kind="file" language="C++">
    <compoundname>io.h</compoundname>
    <includes refid="global_8h" local="yes">global.h</includes>
    <includes refid="model_8h" local="yes">model.h</includes>
    <includedby refid="io_8c" local="yes">io.c</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <includedby refid="units_8h" local="yes">units.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>io.h</label>
        <link refid="io_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>global.h</label>
        <link refid="global_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hdf5.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>gsl/gsl_math.h</label>
      </node>
      <node id="7">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gsl/gsl_spline.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>io.c</label>
        <link refid="io_8c"/>
      </node>
      <node id="1">
        <label>io.h</label>
        <link refid="io_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="5">
        <label>units.c</label>
        <link refid="units_8c"/>
      </node>
      <node id="4">
        <label>units.h</label>
        <link refid="units_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="io_8h_1aa30f39ea8db65e7e2b11e3ddf1636f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_params</definition>
        <argsstring>(char *param_file, struct parameters *parms)</argsstring>
        <name>parse_params</name>
        <param>
          <type>char *</type>
          <declname>param_file</declname>
        </param>
        <param>
          <type>struct <ref refid="structparameters" kindref="compound">parameters</ref> *</type>
          <declname>parms</declname>
        </param>
        <briefdescription>
<para>Reads parameters from a text file. Based on Cholla. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" line="25" column="6" bodyfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.c" bodystart="46" bodyend="102" declfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" declline="25" declcolumn="6"/>
        <references refid="structparameters_1a222e7500d94731b8efdae777c71ca8d9" compoundref="global_8h" startline="63">parameters::drag_data_path</references>
        <references refid="structparameters_1a65676f4e46da862a87074caa262f7352" compoundref="global_8h" startline="46">parameters::f_buoyancy</references>
        <references refid="structparameters_1a44b8f833c7ff07dc990a137b49d306f3" compoundref="global_8h" startline="44">parameters::f_grav</references>
        <references refid="structparameters_1a6960e6f48d147c12441609628d186b35" compoundref="global_8h" startline="42">parameters::f_hydro</references>
        <references refid="global_8h_1ae6648cd71a8bd49d58ae8ed33ba910d1" compoundref="global_8h" startline="13">MAXLEN</references>
        <references refid="structparameters_1a6d652c74fe298f831dd1e8f1b3cecbe2" compoundref="global_8h" startline="56">parameters::mesa_profile_path</references>
        <references refid="structparameters_1ab5115d22be6204fdc5bbf6445269efa0" compoundref="global_8h" startline="48">parameters::Msb</references>
        <references refid="structparameters_1ad05bdbed10f508a28eced6b3f2479081" compoundref="global_8h" startline="54">parameters::r0</references>
        <references refid="structparameters_1a44dd01bc440a7226465b0e38310929b1" compoundref="global_8h" startline="50">parameters::Rsb</references>
        <references refid="io_8c_1a8bd9dd70049fb4e00071d0d73bb8d2a0" compoundref="io_8c" startline="27" endline="44">trim</references>
        <references refid="structparameters_1ab8ff76e9250a51d11724566a9fe840ca" compoundref="global_8h" startline="61">parameters::use_drag_coefficients</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="33" endline="126">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="io_8h_1a8d9485fd3054e691b09938ba0d4d0ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_stellar_profile</definition>
        <argsstring>(struct parameters P, struct star *S)</argsstring>
        <name>read_stellar_profile</name>
        <param>
          <type>struct <ref refid="structparameters" kindref="compound">parameters</ref></type>
          <declname>P</declname>
        </param>
        <param>
          <type>struct <ref refid="structstar" kindref="compound">star</ref> *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
<para>Reads stellar profile from an HDF5 file. The path is contained in the parameter struct, and the properties of the profile are stored in the star struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" line="28" column="5" bodyfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.c" bodystart="104" bodyend="154" declfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" declline="28" declcolumn="5"/>
        <references refid="structstar_1a5065d00361a69ec6809704e3ee2c5ad2" compoundref="global_8h" startline="32">star::cs</references>
        <references refid="structstar_1aa3d46671aba75d6d247013090b96f003" compoundref="global_8h" startline="28">star::drhodr</references>
        <references refid="structstar_1a83c0290c8527de09a6cf98bc33c2b177" compoundref="global_8h" startline="34">star::hrho</references>
        <references refid="structstar_1a0b482cc62f5872828e9f9b53da186c23" compoundref="global_8h" startline="30">star::menc</references>
        <references refid="structparameters_1a6d652c74fe298f831dd1e8f1b3cecbe2" compoundref="global_8h" startline="56">parameters::mesa_profile_path</references>
        <references refid="structstar_1aee104a290f877136a610e2e5d8044fae" compoundref="global_8h" startline="22">star::ncells</references>
        <references refid="structstar_1a54cc4e813708a93c56465e96269a0fe7" compoundref="global_8h" startline="24">star::r</references>
        <references refid="structstar_1ab3f45e19f98283cc73f8f890db888dbb" compoundref="global_8h" startline="26">star::rho</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="33" endline="126">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="io_8h_1ad265c996dc61a0416b2705dddd679087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write_scalars</definition>
        <argsstring>(struct units U, struct parameters P)</argsstring>
        <name>write_scalars</name>
        <param>
          <type>struct <ref refid="structunits" kindref="compound">units</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type>struct <ref refid="structparameters" kindref="compound">parameters</ref></type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>One-time output operation that saves the simulation units and parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" line="31" column="5" bodyfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.c" bodystart="156" bodyend="171" declfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" declline="31" declcolumn="5"/>
        <references refid="structparameters_1a65676f4e46da862a87074caa262f7352" compoundref="global_8h" startline="46">parameters::f_buoyancy</references>
        <references refid="structparameters_1a44b8f833c7ff07dc990a137b49d306f3" compoundref="global_8h" startline="44">parameters::f_grav</references>
        <references refid="structparameters_1a6960e6f48d147c12441609628d186b35" compoundref="global_8h" startline="42">parameters::f_hydro</references>
        <references refid="structunits_1a195638052cff6af8ae117e2774b79551" compoundref="global_8h" startline="73">units::l_unit</references>
        <references refid="structunits_1a658fc25ca175a048deec5ea31f66cf94" compoundref="global_8h" startline="71">units::m_unit</references>
        <references refid="structparameters_1a6d652c74fe298f831dd1e8f1b3cecbe2" compoundref="global_8h" startline="56">parameters::mesa_profile_path</references>
        <references refid="structparameters_1ab5115d22be6204fdc5bbf6445269efa0" compoundref="global_8h" startline="48">parameters::Msb</references>
        <references refid="structparameters_1a44dd01bc440a7226465b0e38310929b1" compoundref="global_8h" startline="50">parameters::Rsb</references>
        <references refid="structunits_1a70648d8ac5326c3a89f1a25e9216d71e" compoundref="global_8h" startline="75">units::t_unit</references>
        <references refid="structparameters_1ab8ff76e9250a51d11724566a9fe840ca" compoundref="global_8h" startline="61">parameters::use_drag_coefficients</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="33" endline="126">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="io_8h_1af789b6233c9122901decdf3fe596d917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write_output</definition>
        <argsstring>(struct units U, struct rhs_terms *rhs, double t, double *y)</argsstring>
        <name>write_output</name>
        <param>
          <type>struct <ref refid="structunits" kindref="compound">units</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type>struct <ref refid="structrhs__terms" kindref="compound">rhs_terms</ref> *</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Writes values of important variables for one step into the output text file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" line="34" column="5" bodyfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.c" bodystart="173" bodyend="204" declfile="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h" declline="34" declcolumn="5"/>
        <references refid="global_8h_1a8c5a521dd2cb882da9a99937f79f5837" compoundref="star_8c" startline="27">acc_cs</references>
        <references refid="global_8h_1a4f47520db4595782a0ea2d8dbceb7f48" compoundref="star_8c" startline="29">acc_hrho</references>
        <references refid="global_8h_1a7b76ae9f39a443e206a410c051e557fe" compoundref="star_8c" startline="25">acc_menc</references>
        <references refid="global_8h_1acf79bf70f986b203fe7fd8eb3e91a634" compoundref="star_8c" startline="21">acc_rho</references>
        <references refid="structrhs__terms_1a63081a901688a91090165ce0f54aa353" compoundref="model_8h" startline="43">rhs_terms::cg_data</references>
        <references refid="model_8c_1a7413b3adbedc8ce3474a78d49a6b9721" compoundref="model_8c" startline="126" endline="138">compute_flow_parameters</references>
        <references refid="structrhs__terms_1aebefffdf507433a4e958bf302c49df65" compoundref="model_8h" startline="45">rhs_terms::cp_data</references>
        <references refid="structrhs__terms_1a303e005485ab20b9778d064fd43ded3f" compoundref="model_8h" startline="47">rhs_terms::drag_data_dims</references>
        <references refid="model_8c_1a52123df6ff7716db1b9bc37a231b9705" compoundref="model_8c" startline="104" endline="113">f_grav</references>
        <references refid="structrhs__terms_1abe610e4b414ddeede219782c0248c991" compoundref="model_8h" startline="29">rhs_terms::f_grav</references>
        <references refid="model_8c_1af133e6d3b99c19b9b1ffba51e05adc50" compoundref="model_8c" startline="115" endline="124">f_hydro</references>
        <references refid="structrhs__terms_1ac13ca99dc6b23ea6aefc0b4d8c063341" compoundref="model_8h" startline="27">rhs_terms::f_hydro</references>
        <references refid="structrhs__terms_1a8ad51f73f9fc24cb4b878d4ac5361cc7" compoundref="model_8h" startline="51">rhs_terms::log_eps_rho_vals</references>
        <references refid="structrhs__terms_1a04fab25e61816a44ef263ff83e046519" compoundref="model_8h" startline="49">rhs_terms::log_q_vals</references>
        <references refid="structrhs__terms_1a77180908c43f26b69a47d40d2c081a92" compoundref="model_8h" startline="53">rhs_terms::log_rp_over_ra_vals</references>
        <references refid="global_8h_1adebc07be0db5cfee6bf35217cc1f8936" compoundref="star_8c" startline="37">spline_cs</references>
        <references refid="global_8h_1ad9933c0d0863db02128a37ab15bccd56" compoundref="star_8c" startline="39">spline_hrho</references>
        <references refid="global_8h_1abb8a871881d465e7625f07eddffa6785" compoundref="star_8c" startline="35">spline_menc</references>
        <references refid="global_8h_1a78d5a9eaea222c102b5f9ead2eba41ef" compoundref="star_8c" startline="31">spline_rho</references>
        <references refid="utils_8c_1aca537472aac6353e383c279ab1cff9ff" compoundref="utils_8c" startline="51" endline="89">trilinear_interp</references>
        <references refid="structrhs__terms_1ac364a399b048a1b67d986844d0fc7c99" compoundref="model_8h" startline="41">rhs_terms::use_drag_coefficients</references>
        <referencedby refid="main_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="main_8c" startline="33" endline="126">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2021<sp/>Ricardo<sp/>Yarza.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>orbit-integrator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>orbit-integrator<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>orbit-integrator<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>orbit-integrator.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;https://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IO_HEADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IO_HEADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="global_8h" kindref="compound">global.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8h" kindref="compound">model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="io_8h_1aa30f39ea8db65e7e2b11e3ddf1636f72" kindref="member">parse_params</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*param_file,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structparameters" kindref="compound">parameters</ref><sp/>*<sp/>parms);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="io_8h_1a8d9485fd3054e691b09938ba0d4d0ec8" kindref="member">read_stellar_profile</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structparameters" kindref="compound">parameters</ref><sp/>P,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structstar" kindref="compound">star</ref><sp/>*S);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="io_8h_1ad265c996dc61a0416b2705dddd679087" kindref="member">write_scalars</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structunits" kindref="compound">units</ref><sp/>U,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structparameters" kindref="compound">parameters</ref><sp/>P);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="io_8h_1af789b6233c9122901decdf3fe596d917" kindref="member">write_output</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structunits" kindref="compound">units</ref><sp/>U,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structrhs__terms" kindref="compound">rhs_terms</ref><sp/>*rhs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ryarza/Downloads/research/planets-ce/code/engulfment-integrator/src/io.h"/>
  </compounddef>
</doxygen>
